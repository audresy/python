import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.metrics import roc_curve, auc

def blight_model():
    df=pd.read_csv('train.csv', encoding='gbk')
    address=pd.read_csv('addresses.csv',encoding='gbk' )
    location=pd.read_csv('latlons.csv',encoding='gbk' )

    df_train=df[['ticket_id','fine_amount','late_fee','compliance']]
    df_train=df_train[np.isfinite(df_train['compliance'])]
    target=df_train['compliance']
    dtrain=df_train.drop(['compliance'],axis=1)
    dtrain=dtrain.fillna(0)
    dtrain=dtrain.set_index(['ticket_id'])
    
    X_train, X_test, y_train, y_test = train_test_split(dtrain, target, random_state=0)
    lr = GradientBoostingClassifier(n_estimators=100, learning_rate=0.01, max_depth=3, random_state = 0).fit(X_train, y_train)
    y_predit_lr=lr.predict(X_test)
    fpr_lr, tpr_lr, _ = roc_curve(y_test, y_predit_lr)
    roc_auc_lr = auc(fpr_lr, tpr_lr)
    
    
    dtest=pd.read_csv('test.csv', encoding='gbk')
    dtest=dtest[['ticket_id','fine_amount','late_fee']]
    dtest=dtest.fillna(0)
    dtest=dtest.set_index(['ticket_id'])
    dtest_proba_lr = lr.predict_proba(dtest)
    result=pd.DataFrame(dtest_proba_lr[:,1])
    result=result.set_index(dtest.index)
    return result
blight_model()
